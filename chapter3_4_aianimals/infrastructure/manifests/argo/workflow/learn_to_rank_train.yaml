apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  generateName: animal-feature-registry-train-
spec:
  schedule: "0 0 * * 2"
  concurrencyPolicy: "Forbid"
  startingDeadlineSeconds: 0
  workflowSpec:
    entrypoint: pipeline
    templates:
      - name: pipeline
        steps:
          - - name: animal-feature-registry-initialization
              template: animal-feature-registry-initialization
          - - name: animal-feature-registry-update
              template: animal-feature-registry-update
              arguments:
                parameters:
                  - name: deployment
                    value: animal-feature-registry-registration
                  - name: containers
                    value: animal-feature-registry-registration
                  - name: feature-mlflow-params
                    value: "{{steps.animal-feature-registry-initialization.outputs.parameters.feature-mlflow-params}}"
          - - name: search-learn-to-rank-lgbm-regression-train
              template: search-learn-to-rank-lgbm-train
              arguments:
                parameters:
                  - name: model-config
                    value: learn_to_rank_lightgbm_regression
                  - name: feature-mlflow-params
                    value: "{{steps.animal-feature-registry-initialization.outputs.parameters.feature-mlflow-params}}"
            - name: search-learn-to-rank-lgbm-ranker-train
              template: search-learn-to-rank-lgbm-train
              arguments:
                parameters:
                  - name: model-config
                    value: learn_to_rank_lightgbm_ranker
                  - name: feature-mlflow-params
                    value: "{{steps.animal-feature-registry-initialization.outputs.parameters.feature-mlflow-params}}"
          - - name: learn-to-rank-lgbm-ranker-update
              template: learn-to-rank-lgbm-update
              arguments:
                parameters:
                  - name: deployment
                    value: learn-to-rank-lgbm-ranker
                  - name: containers
                    value: learn-to-rank-lgbm-ranker
                  - name: feature-mlflow-params
                    value: "{{steps.animal-feature-registry-initialization.outputs.parameters.feature-mlflow-params}}"
                  - name: mlflow-params
                    value: "{{steps.search-learn-to-rank-lgbm-ranker-train.outputs.parameters.mlflow-params}}"
            - name: learn-to-rank-lgbm-regression-update
              template: learn-to-rank-lgbm-update
              arguments:
                parameters:
                  - name: deployment
                    value: learn-to-rank-lgbm-regression
                  - name: containers
                    value: learn-to-rank-lgbm-regression
                  - name: feature-mlflow-params
                    value: "{{steps.animal-feature-registry-initialization.outputs.parameters.feature-mlflow-params}}"
                  - name: mlflow-params
                    value: "{{steps.search-learn-to-rank-lgbm-regression-train.outputs.parameters.mlflow-params}}"

      - name: animal-feature-registry-initialization
        container:
          image: shibui/building-ml-system:ai_animals_feature_registry_0.0.0
          imagePullPolicy: Always
          command:
            - "python"
            - "-m"
            - "src.main"
          env:
            - name: POSTGRES_HOST
              value: postgres.data.svc.cluster.local
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_DB
              value: aianimals
            - name: REDIS_HOST
              value: redis.data.svc.cluster.local
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_DB
              value: "0"
            - name: RABBITMQ_HOST
              value: rabbitmq-amqp.data.svc.cluster.local
            - name: RABBITMQ_USER
              value: user
            - name: RABBITMQ_PASSWORD
              value: password
            - name: RUN_ENVIRONMENT
              value: cloud
            - name: LOG_LEVEL
              value: INFO
            - name: SAVE_DIRECTORY
              value: /tmp/
            - name: JOB
              value: animal_feature_initialization_job
            - name: MODEL_CONFIG
              value: animal_feature
            - name: MLFLOW_TRACKING_URI
              value: http://mlflow.mlflow.svc.cluster.local:5000
            - name: MLFLOW_EXPERIMENT_NAME
              value: animal_feature_extraction
            - name: FEATURE_CACHE_TTL
              value: "604800"
          resources:
            limits:
              cpu: 2000m
              memory: "4000Mi"
            requests:
              cpu: 500m
              memory: "2000Mi"
        outputs:
          parameters:
            - name: feature-mlflow-params
              valueFrom:
                path: /tmp/output.json

      - name: animal-feature-registry-update
        serviceAccountName: user-admin
        inputs:
          parameters:
            - name: deployment
            - name: containers
            - name: feature-mlflow-params
        container:
          image: shibui/building-ml-system:ai_animals_k8s_client_0.0.0
          imagePullPolicy: Always
          command: [kubectl]
          args:
            - -n
            - aianimals
            - set
            - env
            - deployment
            - "{{inputs.parameters.deployment}}"
            - "--containers={{inputs.parameters.containers}}"
            - "REGISTRY_MLFLOW_PARAM_JSON={{inputs.parameters.feature-mlflow-params}}"
            - "EMPTY_RUN=0"

      - name: search-learn-to-rank-lgbm-train
        inputs:
          parameters:
            - name: model-config
            - name: feature-mlflow-params
        container:
          image: shibui/building-ml-system:ai_animals_search_learn_to_rank_train_0.0.0
          imagePullPolicy: Always
          command:
            - "python"
            - "-m"
            - "src.main"
          env:
            - name: MODEL_CONFIG
              value: "{{inputs.parameters.model-config}}"
            - name: MLFLOW_TRACKING_URI
              value: http://mlflow.mlflow.svc.cluster.local:5000
            - name: MLFLOW_EXPERIMENT
              value: search_learn_to_rank
            - name: POSTGRES_HOST
              value: postgres.data.svc.cluster.local
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_DB
              value: aianimals
            - name: REDIS_HOST
              value: redis.data.svc.cluster.local
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_DB
              value: "0"
            - name: FEATURE_MLFLOW_PARAM_JSON
              value: "{{inputs.parameters.feature-mlflow-params}}"
          resources:
            limits:
              cpu: 2000m
              memory: "10000Mi"
            requests:
              cpu: 1000m
              memory: "5000Mi"
        outputs:
          parameters:
            - name: mlflow-params
              valueFrom:
                path: /tmp/output.json

      - name: learn-to-rank-lgbm-update
        serviceAccountName: user-admin
        inputs:
          parameters:
            - name: deployment
            - name: containers
            - name: feature-mlflow-params
            - name: mlflow-params
        container:
          image: shibui/building-ml-system:ai_animals_k8s_client_0.0.0
          imagePullPolicy: Always
          command: [kubectl]
          args:
            - -n
            - search
            - set
            - env
            - deployment
            - "{{inputs.parameters.deployment}}"
            - "--containers={{inputs.parameters.containers}}"
            - "FEATURE_MLFLOW_PARAM_JSON={{inputs.parameters.feature-mlflow-params}}"
            - "MLFLOW_PARAM_JSON={{inputs.parameters.mlflow-params}}"
            - "EMPTY_RUN=0"
