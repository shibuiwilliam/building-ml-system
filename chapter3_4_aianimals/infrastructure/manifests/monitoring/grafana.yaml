apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
  labels:
    name: grafana-datasources
data:
  datasources.yml: |-
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      orgId: 1
      uid: 1
      url: http://prometheus:9090/
      basicAuth: false
      editable: true
      version: 1
      isDefault: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-conf
  namespace: monitoring
  labels:
    name: grafana-dashboards-conf
data:
  dashboards.yml: |-
    apiVersion: 1
    providers:
    - name: 'dashboard'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: true
      editable: true
      options:
        path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  labels:
    name: grafana-dashboards
  namespace: monitoring
data:
  dashboard.json: |
    {
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 1,
    "links": [],
    "liveNow": false,
    "panels": [
      {
        "datasource": {
          "type": "prometheus",
          "uid": "1"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 9,
          "w": 12,
          "x": 0,
          "y": 0
        },
        "id": 2,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom"
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "1"
            },
            "expr": "sum(rate(http_request_duration_seconds_sum{job=\"search-learn-to-rank-lgbm-ranker\", handler=\"/v0/reorder\"}[5m]))",
            "refId": "A"
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "1"
            },
            "expr": "sum(rate(http_request_duration_seconds_sum{job=\"search-learn-to-rank-lgbm-regression\", handler=\"/v0/reorder\"}[5m]))",
            "hide": false,
            "refId": "B"
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "1"
            },
            "expr": "sum(rate(http_request_duration_seconds_sum{job=\"search-similar-image-search-proxy\", handler=\"/v0/similar-image-search\"}[5m]))",
            "hide": false,
            "refId": "C"
          }
        ],
        "title": "Search ML API Request",
        "type": "timeseries"
      }
    ],
    "schemaVersion": 36,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": []
    },
    "time": {
      "from": "now-3h",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "",
    "title": "Dashboard",
    "uid": "BlQhaCU7k",
    "version": 1,
    "weekStart": ""
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          resources:
            limits:
              cpu: 2000m
              memory: "4000Mi"
            requests:
              cpu: 500m
              memory: "1000Mi"
          volumeMounts:
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboards-conf
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
      volumes:
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-dashboards-conf
          configMap:
            name: grafana-dashboards-conf
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  selector:
    app: grafana
  ports:
    - name: grafana
      port: 3000
      protocol: TCP
